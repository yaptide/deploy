# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/git_module.html
- name: Git checkout
  ansible.builtin.git:
    repo: 'https://github.com/yaptide/yaptide'
    dest: '{{ backend_repo_workdir }}'
    version: '{{ backend_repo_version }}'
    force: true  # at later stages repo can be manually modified, therefore we do a force checkout

- name: Copy the SSL certificate from local machine
  ansible.builtin.copy:
    src: '{{ backend_ssl_crt }}'
    dest: '{{ backend_repo_workdir }}/server.crt'
    mode: '0400'

- name: Copy the SSL key from local machine
  ansible.builtin.copy:
    src: '{{ backend_ssl_key }}'
    dest: '{{ backend_repo_workdir }}/server.key'
    mode: '0400'

# get fact about number of cores
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/setup_module.html
- name: Get number of cores
  ansible.builtin.setup:
    filter: ansible_processor_vcpus
  register: backend_vcpus_output

- name: Create .env file with needed variables, append local .env if exists
  ansible.builtin.blockinfile:
    path: '{{ backend_repo_workdir }}/.env'
    mode: '0640'
    create: true
    block: |
      MAX_CORES = {{ [1, backend_vcpus_output.ansible_facts.ansible_processor_vcpus - 2] | max }}
      {% if backend_cert_auth_url != "" %}
      CERT_AUTH_URL = {{ backend_cert_auth_url }}
      {% endif %}
      BACKEND_EXTERNAL_URL = {{ backend_backend_external_url }}
      {% if backend_keycloak_base_url != "" %}
      KEYCLOAK_BASE_URL = {{ backend_keycloak_base_url }}
      {% endif %}
      {% if backend_keycloak_realm != "" %}
      KEYCLOAK_REALM = {{ backend_keycloak_realm }}
      {% endif %}
      {% if lookup('file', './.env', errors='ignore') is defined %}
      {{ lookup('file', './.env', errors='ignore') }}
      {% endif %}


# https://docs.ansible.com/ansible/latest/collections/community/docker/docker_compose_module.html
- name: Run `docker-compose up` to bring up the backend
  community.docker.docker_compose:
    project_src: '{{ backend_repo_workdir }}'

# Copy certificates to the yaptide_ui image:
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/docker_container_module.html
- name: Copy certificates to the yaptide_nginx image
  community.docker.docker_container_copy_into:
    container: 'yaptide_nginx'
    path: '{{ backend_repo_workdir }}/{{ item }}'
    container_path: '/etc/nginx/conf.d/{{ item }}'
  with_items:
    - 'server.crt'
    - 'server.key'

# restart yaptide_nginx container
- name: Restart yaptide_nginx container
  community.docker.docker_container:
    name: 'yaptide_nginx'
    restart: true

- name: Insert a first user into database
  community.docker.docker_container_exec:
    container: yaptide_flask
    command: 'python3 yaptide/admin/db_manage.py add-user admin --password {{ backend_password }}'
    chdir: /usr/local/app/
  register: backend_add_user_output

- name: Print output of add-user command
  ansible.builtin.debug:
    msg: '{{ backend_add_user_output.stdout_lines }}'


- name: Insert first cluster into database
  community.docker.docker_container_exec:
    container: yaptide_flask
    command: 'python3 yaptide/admin/db_manage.py add-cluster {{ backend_cluster }}'
    chdir: /usr/local/app/
  register: backend_add_cluster_output

- name: Print output of add-cluster command
  ansible.builtin.debug:
    msg: '{{ backend_add_cluster_output.stdout_lines }}'
