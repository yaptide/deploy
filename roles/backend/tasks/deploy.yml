# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/git_module.html
- name: Git checkout
  ansible.builtin.git:
    repo: 'https://github.com/yaptide/yaptide'
    dest: '{{ backend_repo_workdir }}'
    version: '{{ backend_repo_version }}'
    force: true  # at later stages repo can be manually modified, therefore we do a force checkout

# get fact about number of cores
# # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/setup_module.html
- name: Get number of cores
  ansible.builtin.setup:
    filter: ansible_processor_vcpus
  register: backend_vcpus_output

- name: Create .env file with SHIELDHIT_PATH and MAX_CORES
  ansible.builtin.blockinfile:
    path: '{{ backend_repo_workdir }}/.env'
    mode: '0640'
    create: true
    block: |
      MAX_CORES = {{ [1, backend_vcpus_output.ansible_facts.ansible_processor_vcpus - 2] | max }}

# https://docs.ansible.com/ansible/latest/collections/community/docker/docker_compose_module.html
- name: Run `docker-compose up` to bring up the backend
  community.docker.docker_compose:
    project_src: '{{ backend_repo_workdir }}'

- name: Insert a first user into database
  community.docker.docker_container_exec:
    container: yaptide_flask
    command: 'python3 yaptide/admin/db_manage.py add-user admin --password {{ backend_password }}'
    chdir: /usr/local/app/
  register: backend_add_user_output

- name: Print output of add-user command
  ansible.builtin.debug:
    msg: '{{ backend_add_user_output.stdout_lines }}'
