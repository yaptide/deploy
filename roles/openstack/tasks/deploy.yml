# Old key needs to be deleted prior to creating a new one
# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/keypair_module.html
- name: Delete old key
  openstack.cloud.keypair:
    state: absent
    name: "{{ key_name }}"

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/keypair_module.html
- name: Create a keypair
  openstack.cloud.keypair:
    state: present
    name: "{{ key_name }}"
    public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/network_module.html
- name: Create the network
  openstack.cloud.network:
    state: present
    name: "{{ network_name }}"
  register: network_facts

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/subnet_module.html
- name: Create the subnet
  openstack.cloud.subnet:
    state: present
    network_name: "{{ network_facts.id }}"
    name: "{{ subnet_name }}"
    ip_version: 4
    cidr: "{{ subnet_cidr }}"
    gateway_ip: "{{ gateway_ip }}"
    enable_dhcp: true
    dns_nameservers: "{{ dns_nameservers }}"
  register: subnet_facts

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/router_module.html
- name: Create the router
  openstack.cloud.router:
    state: present
    name: "{{ router_name }}"
    network: "{{ external_network_name }}"
    interfaces:
      - "{{ subnet_name }}"

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/security_group_module.html
- name: Create a new security group
  openstack.cloud.security_group:
    state: present
    name: "{{ security_group_name }}"

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/security_group_rule_module.html
- name: Create a new security group allowing any ICMP
  openstack.cloud.security_group_rule:
    security_group: "{{ security_group_name }}"
    protocol: icmp
    remote_ip_prefix: 0.0.0.0/0

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/security_group_rule_module.html
- name: Create a new security group allowing any SSH connection
  openstack.cloud.security_group_rule:
    security_group: "{{ security_group_name }}"
    protocol: tcp
    port_range_min: 22
    port_range_max: 22
    remote_ip_prefix: 0.0.0.0/0

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/server_module.html
- name: Launch an instance
  openstack.cloud.server:
    state: present
    name: "{{ instance_hostname }}"
    image: "{{ image_name }}"
    key_name: "{{ key_name }}"
    flavor: "{{ flavor_name }}"
    nics:
      - net-name: "{{ network_name }}"
    security_groups: "{{ security_group_name }}"
    userdata: |
      power_state:
        delay: "+30"
        mode: reboot
        message: Bye Bye
        timeout: 30
        condition: True
  register: instance_facts

- name: Show Server's IP
  ansible.builtin.debug:
    msg: "{{ instance_facts.openstack.public_v4 }}"

- name: Scan for ssh public key
  ansible.builtin.command: "ssh-keyscan -H {{ instance_facts.openstack.public_v4 }}"
  register: ssh_keyscan_host_results
  changed_when: ssh_keyscan_host_results.rc != 0
  until: "ssh_keyscan_host_results is succeeded"
  retries: 10
  delay: 10

- name: Add/update the public key(s) in the known_hosts file
  ansible.builtin.known_hosts:
    name: "{{ instance_facts.openstack.public_v4 }}"
    key: "{{ ssh_keyscan_host_results.stdout }}"
