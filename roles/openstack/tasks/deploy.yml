# Old key needs to be deleted prior to creating a new one
# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/keypair_module.html
- name: Replace a keypair with one assigned to this machine
  openstack.cloud.keypair:
    state: replace
    name: "{{ key_name }}"
    public_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"  # noqa jinja[invalid]

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/network_module.html
- name: Create the network
  openstack.cloud.network:
    state: present
    name: "{{ network_name }}"
  register: network_facts

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/subnet_module.html
- name: Create the subnet
  openstack.cloud.subnet:
    state: present
    network_name: "{{ network_facts.id }}"
    name: "{{ subnet_name }}"
    ip_version: 4
    cidr: "{{ subnet_cidr }}"
    gateway_ip: "{{ gateway_ip }}"
    enable_dhcp: true
    dns_nameservers: "{{ dns_nameservers }}"
  register: subnet_facts

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/router_module.html
- name: Create the router
  openstack.cloud.router:
    state: present
    name: "{{ router_name }}"
    network: "{{ external_network_name }}"
    interfaces:
      - "{{ subnet_name }}"

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/security_group_module.html
- name: Create a new security group
  openstack.cloud.security_group:
    state: present
    name: "{{ security_group_name }}"

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/security_group_rule_module.html
- name: Create a new security group allowing any ICMP
  openstack.cloud.security_group_rule:
    security_group: "{{ security_group_name }}"
    protocol: icmp
    remote_ip_prefix: 0.0.0.0/0

# https://docs.ansible.com/ansible/latest/collections/openstack/cloud/security_group_rule_module.html
- name: Create a new security group opening several ports
  openstack.cloud.security_group_rule:
    security_group: "{{ security_group_name }}"
    protocol: tcp
    port_range_min: '{{ item }}'
    port_range_max: '{{ item }}'
    remote_ip_prefix: 0.0.0.0/0
  loop:
    - 22
    - 80
    - 5000

# At the moment of writing cloud infrastructure (C3 @ plgrid) has issues with creating instances
# Due to some problems two network interfaces are created for each instance, causing problems with
# assiging public IP
# As a workaround we are use a dedicated playbook to create an instance, and in case of troubles
# tear it down and repeat the process
# Due to limitations of the ansible we cannot implement it as a single repetitive task
- name: Launch an instance
  ansible.builtin.include_tasks: launch_instance.yml

- name: Assign a floating IP to the instance
  openstack.cloud.floating_ip:
    server: "{{ instance_hostname }}"
    network: "{{ external_network_name }}"
    nat_destination: "{{ network_name }}"
    reuse: true
    wait: true
  register: floating_ip_facts

- name: Wait for port 22 to become open and contain "OpenSSH"
  ansible.builtin.wait_for:
    port: 22
    host: "{{ floating_ip_facts.floating_ip.floating_ip_address }}"
    search_regex: OpenSSH
    delay: 10
    timeout: 60
  register: wait_for_ssh
  changed_when: false
  until: wait_for_ssh is succeeded
  retries: 15
  connection: local

- name: Scan for ssh public key
  ansible.builtin.command: "ssh-keyscan -H {{ floating_ip_facts.floating_ip.floating_ip_address }}"
  register: ssh_keyscan_host_results
  changed_when: ssh_keyscan_host_results.rc != 0
  until: "ssh_keyscan_host_results is succeeded"
  retries: 10
  delay: 10

- name: Add/update the public key(s) in the known_hosts file
  ansible.builtin.known_hosts:
    name: "{{ floating_ip_facts.floating_ip.floating_ip_address }}"
    key: "{{ ssh_keyscan_host_results.stdout }}"

- name: Show IP
  ansible.builtin.debug:
    msg: "To connect to the instance type: ssh {{ ansible_user }}@{{ floating_ip_facts.floating_ip.floating_ip_address }} "
